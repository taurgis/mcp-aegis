description: "Failing Error Response Tests - Demonstrates Error Response Handling Failures"
tests:
  # These tests should fail to demonstrate error response validation failures
  # They expect success responses but should get error responses, or vice versa

  # Test 1: Expecting success but getting error (file not found)
  - it: "should fail when expecting success but getting file not found error"
    request:
      jsonrpc: "2.0"
      id: "error-fail-1"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-1"
        result:
          content:
            - type: "text"
              text: "match:contains:Hello"     # ❌ FAIL: expecting success content but getting error
          isError: false                      # ❌ FAIL: expecting no error but getting error

  # Test 2: Expecting error response structure but getting success
  - it: "should fail via mismatched isError and content pattern (formerly expected error structure)"
    request:
      jsonrpc: "2.0"
      id: "error-fail-2"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/hello.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-2"
        result:                               # Now align with actual success shape to avoid structural errors
          isError: true                       # ❌ FAIL: actual is false
          content:
            - type: "text"
              text: "match:contains:Missing file"  # ❌ FAIL: phrase not in actual content

  # Test 3: Wrong error code expectation
  - it: "should fail via wrong isError expectation and content pattern (formerly wrong error code)"
    request:
      jsonrpc: "2.0"
      id: "error-fail-3"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-3"
        result:
          isError: true
          content: "match:contains:Permission denied"   # ❌ FAIL: actual message is file not found

  # Test 4: Wrong error message pattern expectation
  - it: "should fail when error content regex doesn't match (formerly error message pattern)"
    request:
      jsonrpc: "2.0"
      id: "error-fail-4"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-4"
        result:
          isError: true
          content: "match:regex:^Success$"              # ❌ FAIL: does not match file not found text

  # Test 5: Expecting isError flag to be false when it's true
  - it: "should fail on isError value mismatch and content length (adjusted to avoid extra_field)"
    request:
      jsonrpc: "2.0"
      id: "error-fail-5"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-5"
        result:
          isError: false                      # ❌ FAIL: actual true
          content: "match:arrayLength:5"     # ❌ FAIL: actual length 1

  # Test 6: Wrong error content structure expectation
  - it: "should fail on content length mismatch (was wrong error content structure)"
    request:
      jsonrpc: "2.0"
      id: "error-fail-6"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-6"
        result:
          isError: true
          content: "match:arrayLength:2"      # ❌ FAIL: actual length 1

  # Test 7: Expecting specific error message but getting different one
  - it: "should fail when expecting specific unmatched error phrase"
    request:
      jsonrpc: "2.0"
      id: "error-fail-7"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-7"
        result:
          content: "match:contains:access denied"  # ❌ FAIL: expecting access denied but getting file not found
          isError: true

  # Test 8: Wrong tool error - calling non-existent tool but expecting success
  - it: "should fail on wrong error code and message pattern for nonexistent tool"
    request:
      jsonrpc: "2.0"
      id: "error-fail-8"
      method: "tools/call"
      params:
        name: "nonexistent_tool"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-8"
        error:                                # Match actual error shape; induce content failures only
          code: 0                             # ❌ FAIL: actual -32602
          message: "match:contains:permission" # ❌ FAIL: actual 'Tool not found'

  # Test 9: Method not found but expecting valid response
  - it: "should fail on method not found mismatch details"
    request:
      jsonrpc: "2.0"
      id: "error-fail-9"
      method: "invalid/method"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-9"
        error:
          code: -32000                        # ❌ FAIL: actual -32601
          message: "match:contains:Unknown"   # ❌ FAIL: actual 'Method not found'

  # Test 10: Malformed request but expecting success
  - it: "should fail on malformed request value/pattern mismatches"
    request:
      jsonrpc: "2.0"
      id: "error-fail-10"
      method: "tools/call"
      params:
        name: "read_file"
        # Missing required arguments
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-10"
        result:
          isError: false                      # ❌ FAIL: actual true
          content: "match:arrayLength:3"      # ❌ FAIL: actual length 1

  # Test 11: Wrong JSON-RPC version expectation
  - it: "should fail with wrong JSON-RPC version and content mismatch (no structural missing error)"
    request:
      jsonrpc: "2.0"
      id: "error-fail-11"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "1.0"                        # ❌ FAIL: version mismatch only
        id: "error-fail-11"
        result:
          isError: true
          content: "match:contains:permission denied"  # ❌ FAIL: not in actual message

  # Test 12: Wrong ID in error response expectation
  - it: "should fail with wrong ID and value mismatch (no missing error field)"
    request:
      jsonrpc: "2.0"
      id: "error-fail-12"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "wrong-id"                        # ❌ FAIL: ID mismatch only
        result:
          isError: false                      # ❌ FAIL: actual true
          content: "match:contains:Success"   # ❌ FAIL: not in error message

  # Test 13: Complex error structure expectation failure
  - it: "should fail with regex + isError mismatch (removed missing field)"
    request:
      jsonrpc: "2.0"
      id: "error-fail-13"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-13"
        result:
          isError: false                      # ❌ FAIL: actual true
          content: "match:regex:success"      # ❌ FAIL: regex does not match

  # Test 14: Multiple error expectation failures
  - it: "should fail with multiple pattern/value mismatches (no missing fields)"
    request:
      jsonrpc: "2.0"
      id: "error-fail-14"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/nonexistent.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "error-fail-14"
        result:
          content: "match:arrayLength:5"      # ❌ FAIL: length mismatch
          isError: false                      # ❌ FAIL: value mismatch
