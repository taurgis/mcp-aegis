description: "Failing Partial Matching Tests - Pattern/Value Failures (No Structural Errors)"
tests:
  # All tests intentionally fail via partial matching pattern/value mismatches ONLY.
  # No test should fail due to missing or unexpected (extra) fields.

  # Test 1: Root partial length mismatch (existing field, no structural issue)
  - it: "should fail when partial root field length is wrong"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-1"
      method: "tools/list"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-1"
        result:
          match:partial:
            tools: "match:arrayLength:2"  # FAIL: actual length is 1

  # Test 2: Partial match failure - wrong array length
  - it: "should fail when partial field has wrong value"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-2"
      method: "tools/list"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-2"
        result:
          match:partial:
            tools: "match:arrayLength:5"  # FAIL: length 1

  # Test 3: Nested partial object value mismatch
  - it: "should fail when nested partial object doesn't match"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-3"
      method: "tools/list"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-3"
        result:
          tools:
            - match:partial:
                name: "delete_file"  # FAIL: actual is read_file

  # Test 4: Wrong type expectations in partial
  - it: "should fail when partial field has wrong type"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-4"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/hello.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-4"
        result:
          match:partial:
            content: "match:type:object"  # FAIL: actual is array
            isError: "match:type:string"  # FAIL: actual is boolean

  # Test 5: Deep partial nested mismatch (no extra field errors)
  - it: "should fail when deep partial matching fails"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-5"
      method: "tools/list"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-5"
        result:
          tools:
            - match:partial:
                inputSchema:
                  match:partial:
                    type: "array"  # FAIL: actual is object

  # Test 6: Pattern failures inside partial
  - it: "should fail when partial field patterns don't match"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-6"
      method: "tools/list"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-6"
        result:
          tools:
            - match:partial:
                name: "match:startsWith:delete"    # FAIL
                description: "match:contains:create" # FAIL

  # Test 7: Partial applied at root for array element partials
  - it: "should fail when partial matching in array elements fails"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-7"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/hello.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-7"
        result:
          match:partial:
            content:
              - match:partial:
                  type: "image"                 # FAIL: actual text
                  text: "match:contains:Goodbye" # FAIL

  # Test 8: Multiple pattern failures (no missing fields)
  - it: "should fail with multiple partial matching errors"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-8"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/hello.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-8"
        result:
          match:partial:
            content: "match:arrayLength:5"  # FAIL
            isError: "match:type:string"    # FAIL

  # Test 9: Complex nested partial mismatch (wrong type for existing nested field)
  - it: "should fail when complex nested partial matching fails"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-9"
      method: "tools/list"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-9"
        result:
          tools:
            - match:partial:
                inputSchema:
                  match:partial:
                    properties:
                      match:partial:
                        path:
                          match:partial:
                            type: "number"  # FAIL: actual is string

  # Test 10: Null vs actual value mismatch
  - it: "should fail when partial field is null but actual has value"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-10"
      method: "tools/list"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-10"
        result:
          match:partial:
            tools:
              - name: null  # FAIL: actual is read_file

  # Test 11: Regex mismatch
  - it: "should fail when partial field doesn't match regex"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-11"
      method: "tools/list"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-11"
        result:
          tools:
            - match:partial:
                name: "match:regex:^delete_"  # FAIL

  # Test 12: ArrayContains pattern failure
  - it: "should fail when partial field array doesn't contain expected element"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-12"
      method: "tools/list"
      params: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-12"
        result:
          match:partial:
            tools: "match:arrayContains:name:delete_file"  # FAIL

  # Test 13: Complex partial with nested element partial failures (no structural missing fields)
  - it: "should fail with complex partial matching using multiple patterns"
    request:
      jsonrpc: "2.0"
      id: "partial-fail-13"
      method: "tools/call"
      params:
        name: "read_file"
        arguments:
          path: "../shared-test-data/hello.txt"
    expect:
      response:
        jsonrpc: "2.0"
        id: "partial-fail-13"
        result:
          match:partial:
            content:
              - match:partial:
                  type: "image"                  # FAIL
                  text: "match:contains:Goodbye" # FAIL
            isError: "match:type:string"         # FAIL
